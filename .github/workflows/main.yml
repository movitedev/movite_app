# This is a basic workflow to help you get started with Actions

name: deploy to site

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Install flutter and fire deployment
        uses: actions/setup-node@v1
        with: 
          node-version: 8
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: beta
      - run: flutter config --enable-web
      - run: flutter pub get
      - run: flutter build apk --dart-define mapBoxApiKey=${{secrets.MAPBOXAPIKEY}}
      - run: flutter build web --dart-define mapBoxApiKey=${{secrets.MAPBOXAPIKEY}}
      #- run: if cd flutter; then git pull && cd ..; else git clone https://github.com/flutter/flutter.git; fi && flutter/bin/flutter config --enable-web && flutter/bin/flutter pub get && flutter/bin/flutter build apk --release && flutter/bin/flutter build web --release
      - run: |
          git clone https://github.com/movitedev/movitedev.github.io.git
          cd movitedev.github.io
          cd movitedev.github.io && git remote set-url --push origin https://movitedev:${{secrets.GITHUB_TOKEN}}@github.com/movitedev.github.io
          mkdir movitedev.github.io/download
          cp -r ../build/web/* ./ && cp ../build/app/outputs/apk/release/app-release.apk ./download/movite.apk
          git add .
          git commit -am "Site push"
          git push
